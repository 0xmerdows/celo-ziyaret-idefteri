{{#if (eq templateType "farcaster-miniapp")}}"use client";
import { useMiniApp } from "@/contexts/miniapp-context";
{{else}}
import Link from "next/link";
import { Button } from "@/components/ui/button";
import { Zap } from "lucide-react";
{{/if}}

{{#if (eq templateType "farcaster-miniapp")}}
export default function Home() {
  const { context, isMiniAppReady } = useMiniApp();
  
  // Extract user data from context
  const user = context?.user;
  const walletAddress = user?.custody || user?.verifications?.[0] || "0x1e4B...605B";
  const displayName = user?.displayName || user?.username || "User";
  const username = user?.username || "@user";
  const pfpUrl = user?.pfpUrl;
  
  // Format wallet address to show first 6 and last 4 characters
  const formatAddress = (address: string) => {
    if (!address || address.length < 10) return address;
    return `${address.slice(0, 6)}...${address.slice(-4)}`;
  };
  
  if (!isMiniAppReady) {
    return (
      <main className="flex-1">
        <section className="flex items-center justify-center min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100">
          <div className="w-full max-w-md mx-auto p-8 text-center">
            <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4"></div>
            <p className="text-gray-600">Loading...</p>
          </div>
        </section>
      </main>
    );
  }
  
  return (
    <main className="flex-1">
      <section className="flex items-center justify-center min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100">
        <div className="w-full max-w-md mx-auto p-8 text-center">
          {/* Welcome Header */}
          <h1 className="text-4xl font-bold text-gray-900 mb-4">
            Welcome
          </h1>
          
          {/* Status Message */}
          <p className="text-lg text-gray-600 mb-6">
            You are signed in!
          </p>
          
          {/* User Wallet Address */}
          <div className="mb-8">
            <p className="text-sm text-gray-500 font-mono bg-white/20 backdrop-blur-sm px-4 py-2 rounded-lg">
              {formatAddress(walletAddress)}
            </p>
          </div>
          
          {/* User Profile Section */}
          <div className="mb-8">
            {/* Profile Avatar */}
            <div className="w-20 h-20 mx-auto mb-4 bg-gradient-to-br from-yellow-400 to-orange-500 rounded-full flex items-center justify-center overflow-hidden">
              {pfpUrl ? (
                <img 
                  src={pfpUrl} 
                  alt="Profile" 
                  className="w-full h-full object-cover rounded-full"
                />
              ) : (
                <div className="w-16 h-16 bg-gray-800 rounded-full flex items-center justify-center">
                  <div className="w-3 h-3 bg-green-400 rounded-full"></div>
                </div>
              )}
            </div>
            
            {/* Profile Info */}
            <div>
              <h2 className="text-xl font-semibold text-gray-900 mb-1">
                {displayName}
              </h2>
              <p className="text-gray-500">
                {username.startsWith('@') ? username : `@${username}`}
              </p>
            </div>
          </div>
        </div>
      </section>
    </main>
  );
}
{{else}}
export default function Home() {
  return (
<main className="flex-1">
  {/* Hero Section */}
  <section className="relative py-20 lg:py-32">
    <div className="container px-4 mx-auto max-w-7xl">
      <div className="text-center max-w-4xl mx-auto">
        {/* Badge */}
        <div
          className="inline-flex items-center gap-2 px-3 py-1 mb-8 text-sm font-medium bg-primary/10 text-primary rounded-full border border-primary/20"
        >
          <Zap className="h-4 w-4" />
          Built on Celo
        </div>

        {/* Main Heading */}
        <h1
          className="text-4xl md:text-6xl lg:text-7xl font-bold tracking-tight mb-6"
        >
          Welcome to{" "}
          <span className="text-primary">{{projectName}}</span>
        </h1>

        {/* Subtitle */}
        <p
          className="text-lg md:text-xl text-muted-foreground mb-8 max-w-2xl mx-auto leading-relaxed"
        >
          Start building your decentralized application on Celo. Fast and secure blockchain for everyone.
        </p>

        {/* CTA Buttons */}
        <div
          className="flex flex-col sm:flex-row gap-4 justify-center items-center mb-16"
        >
          <Button size="lg" className="px-8 py-3 text-base font-medium">
            Get Started
          </Button>
        </div>
      </div>
    </div>
  </section>

</main>
  );
}
{{/if}}