// SPDX-License-Identifier: MIT
pragma solidity ^0.8.19;

/// @title Simple on-chain Guestbook / Visitor Log
/// @author 0xmerdows (example)
/// @notice Küçük bir ziyaretçi hatıra defteri (guestbook) akıllı kontratı.
/// - Ziyaretçi isim + mesaj bırakır (string).
/// - Mesaj bırakılırken opsiyonel olarak Ether gönderebilir (bahşiş).
/// - Kontrat sahibi mesajları silebilir (soft delete) ve kontratta biriken Ether'i çekebilir.
contract Guestbook {
    struct Entry {
        address author;
        string name;
        string message;
        uint256 timestamp;
        bool deleted;
        uint256 value; // gönderilen Ether (wei)
    }

    Entry[] private entries;
    address public owner;

    event NewEntry(
        uint256 indexed index,
        address indexed author,
        string name,
        string message,
        uint256 timestamp,
        uint256 value
    );

    event EntryDeleted(uint256 indexed index, address indexed moderator);
    event OwnerChanged(address indexed previousOwner, address indexed newOwner);
    event Withdraw(address indexed to, uint256 amount);

    modifier onlyOwner() {
        require(msg.sender == owner, "Guestbook: caller is not the owner");

